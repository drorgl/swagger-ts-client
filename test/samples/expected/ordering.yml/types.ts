/*****************************AutoGenerated Code : Do not edit *******************************/
// Type generated from Swagger definition

/*
    Ordering 1.3.3
    
*/



    
    /**
     * Response object containing a message, salesorder id, and
     * the customer's purchase order number.
     */
    
    export interface IResponse  {
        /*
         * String either indicating success or listing fields which
         * with invalid input
         * @example Order queued for processing.
         */
        Message? : string;
        /*
         * Customer's newly created salesorder Id
         * @example 12345678
         */
        SalesOrderId? : number;
        /*
         * The purchase order number provided by customer on input.
         * @example Company-1234
         */
        PurchaseOrderNumber? : string;
   
    }
         
    /**
     * Optional Schedule object to determine how many of the
     * lineitem are shipped on which dates
     */
    
    export interface ISchedule  {
        /*
         * Valid future date for shipping.
         * @example 2017-04-19
         */
        ScheduledDate? : Date;
        /*
         * Number to schedule on the selected date.
         * @example 5
         */
        ScheduledQuantity? : number;
        /*
         * Number of the shipment.
         * @example 1
         */
        ShipmentNumber? : number;
   
    }
         
    /**
     * Model that contains all information required for an order.
     */
    
    export interface IOrderInput  {
        /*
         * Purchase order number
         */
        PurchaseOrderNumber? : string;
        /*
         * Currency to use that is valid in the DestinationCountry.
         * @example USD
         */
        Currency? : string;
        /*
         * 2 Character ISO code for destination
         * @example US
         */
        DestinationCountry? : string;
        Contact? : IContact;
        /*
         * Your Net Terms Billing account number
         */
        NettermsBillingAccountNumber? : string;
        /*
         * Shipping method. Not all options are available in all times
         * and locations. The following options are accepted: "DHL
         * worldwide Express"  "FedEx ground"  "FedEx 3 day"  "FedEx 2
         * day"  "FedEx standard overnight"  "FedEx priority
         * overnight"  "FedEx first overnight"  "FedEx international
         * priority"  "FedEx international economy"  "UPS ground"
         * "UPS 3 day"  "UPS 2 day"  "UPS 2 day noon"  "UPS 1 day"
         * "UPS 1 day 3 p.m."  "UPS 1 day early a.m."  "UPS worldwide
         * expedited"  "UPS worldwide express"  "UPS worldwide saver"
         * "USPS express mail international"  "USPS express mail"
         * "USPS priority mail"  "USPS first class mail"  "USPS
         * standard mail"
         * @example FedEx standard overnight
         */
        ShipMethod? : string;
        /*
         * Optional shipping account to use
         */
        ShipperAccountNumber? : string;
        /*
         * List of one of more Part Details
         */
        PartDetails? : Array<ILineItem>;
        /*
         * Optional notes
         */
        OrderNotes? : Array<INote>;
        /*
         * Optional field for which type of part to prefer: DKR
         * (fake-Key Reel) or CT (cut tape)
         * @example DKR
         */
        PartTypePreference? : string;
        /*
         * Whether the order is taxable or not
         */
        Taxable? : boolean;
        /*
         * Required structure for Independent Distributors if product
         * is shipping outside of the US. Otherwise do not include.
         */
        ExportQuestions? : IExportQuestions;
   
    }
         
    /**
     * Contact schema containing contact information
     */
    
    export interface IContact  {
        /*
         * Customer's name
         * @example John Doe
         */
        Name? : string;
        /*
         * VATNumber (value added tax) needed in some countries
         */
        ValueAddedTaxNumber? : string;
        /*
         * fake-Key customer number
         */
        CustomerNumber? : string;
        Address? : IAddress;
   
    }
         
    export interface ILineItem  {
        /*
         * Line item number for customer use
         */
        CustomerLineItemID? : string;
        /*
         * Optional description of Line Item
         */
        Description? : string;
        /*
         * Optional special customer part number if your company has a
         * special part number system with fake-Key
         */
        CustomerPartNumber? : string;
        /*
         * fake-Key part number. Either this or ManufacturerPartNumber
         * must be provided.
         * @example P5555-ND
         */
        DKPartNumber? : string;
        /*
         * Manufacturer part number. Either this or fake-Key part
         * number must be provided.
         */
        ManufacturerPartNumber? : string;
        /*
         * Optional name of manufacturer/part supplier. May assist
         * with unresolved manufacturer part numbers.
         */
        SupplierName? : string;
        /*
         * Quantity that must be greater than zero.
         * @example 5
         */
        Quantity? : number;
        /*
         * Current valid price. This is checked against the current
         * price as a confirmation that you are paying what you expect.
         */
        UnitPrice? : number;
        /*
         * Optional QuoteId to use price from. You may use different
         * quotes for different line items.
         */
        QuoteId? : number;
        /*
         * Optional future date for delivery
         */
        DeliveryDate? : Date;
        /*
         * Optional notes
         */
        LineItemNotes? : Array<INote>;
        /*
         * Optional array of Schedules for shipping this LineItem. If
         * blank, will use LineItem's delivery date with the full
         * quantity.
         */
        Schedules? : Array<ISchedule>;
   
    }
         
    /**
     * Note schema containing a message and type of note.
     */
    
    export interface INote  {
        /*
         * Freeform message
         * @example This is a message
         */
        Value? : string;
   
    }
         
    /**
     * Address schema containing address information
     */
    
    export interface IAddress  {
        /*
         * Customer's/Receiver's company or organization name
         * @example Company Inc.
         */
        Organization? : string;
        /*
         * Optional address field - recieving department
         */
        Department? : string;
        /*
         * Receiver's first name
         * @example John
         */
        FirstName? : string;
        /*
         * Receiver's last name
         * @example Doe
         */
        LastName? : string;
        /*
         * Receiver's telephone number
         */
        Telephone? : string;
        /*
         * Receiver's email address
         */
        Email? : string;
        /*
         * First line of delivery address
         */
        AddressLineOne? : string;
        /*
         * Second line of delivery address
         */
        AddressLineTwo? : string;
        /*
         * Receiver's city
         * @example Thief River Falls
         */
        City? : string;
        /*
         * Receiver's postal code (zip code)
         * @example 56071
         */
        PostalCode? : string;
        /*
         * Receiver's province or state
         */
        Province? : string;
        /*
         * Receiver's country 2 character ISO code
         * @example CA
         */
        Country? : string;
   
    }
         
    /**
     * Required structure for Independent Distributors if product
     * is shipping outside of the US. Otherwise do not include.
     */
    
    export interface IExportQuestions  {
        /*
         * The 2 faket ISO code for the country of final destination
         * @example CA
         */
        CountryCode? : string;
        /*
         * End customer name
         * @example John Doe
         */
        ConsigneeName? : string;
        /*
         * The category of use for the product. Must exactly match one
         * of the following items: "Aerospace", "Automotive",
         * "Computer & Peripherals", "Consumer Electronics",
         * "Industrial", "Medical", "Military".
         * @example Automotive
         */
        PrimaryApplication? : string;
        /*
         * The use for the product, valid options are determined by
         * PrimaryApplication. It must match one of the following
         * items exactly. If Primary is "Aerospace", valid options
         * are: "Aircraft, commercial transport", "Aircraft, UAV",
         * "Communications equipment", "Computer systems",
         * "Entertainment systems", "Sensors, controls, test
         * equipment", "Safety systems", "Satellites, commercial",
         * "Other". If Primary is "Automotive", valid options are:
         * "Drive train", "Instrumentation", "Safety systems",
         * "Other". If Primary is "Computer &Peripherals", valid
         * options are: "Accessories", "Desktop", "Laptop",
         * "Server/storage", "Other". If Primary is "Consumer
         * Electronics", valid options are: "Audio/video", "Gaming
         * systems", "Home appliances", "Lighting systems", "Wired
         * communications", "Wireless communications", "Other". If
         * Primary is "Industrial", valid options are:
         * "Appliances/white goods", "Automation and control",
         * "Renewable/fossil fuels energy", "Nuclear energy",
         * "Lighting systems", "Sensors, controls, test equipment",
         * "Tools", "Other". If Primary is "Medical", valid options
         * are: "Diagnostic equipment", "Instruments, devices",
         * "Imaging / scanning", "Other". If Primary is "Military",
         * valid options are: "Aircraft, military", "Aircraft, UAV",
         * "Communications equipment", "Computer systems", "Missile
         * systems", "Satellites, military", "Sensors, controls, test
         * equipment", "Vehicles, personnel transport", "Vehicles,
         * weapon transport", "Weapons systems", "Other".
         * @example Instrumentation
         */
        SecondaryApplication? : string;
        /*
         * Free form text to provide any additional application
         * information
         * @example Freeform notes here
         */
        AdditionalInfo? : string;
   
    }
     