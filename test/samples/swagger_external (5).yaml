swagger: '2.0'
x-default-token: a1b2c3d4-a1b2-a1b2-a1b2-a1b2c3d4e5f6
info:
  title: Remote Diagnostic Support API
  description: The Remote Diagnostic Support API will provide the possibility for 3rd party applications (e.g. ADAC, ATU, etc.) to access vehicle diagnostics data remotely on behalf of the Daimler customer. To use the endpoints you need a valid vin/fin (vehicleId).
  version: '1.0'
  contact:
    name: The open API platform by arik-Benz
host: api.arik-benz.com
basePath: /remotediagnostic_tryout/v1
schemes:
  - https
tags:
  - name: Resources
    description: Remote Diagnostic Support service for view all resources.
  - name: Electronical Control Units (ECU's)
    description: Remote Diagnostic Support services for view ecu List.
  - name: Diagnostic Trouble Codes (DTC's)
    description: Remote Diagnostic Support service for view dtc List.
  - name: Diagnostic Trouble Code (DTC) Snapshots
    description: Remote Diagnostic Support service for view dtc snapshot List.
paths:
  '/vehicles/{vehicleId}/resourceReadouts':
    post:
      tags:
        - Resources
      summary: View the List of resources
      description: >-
        This API creates a readout of available resources to the accessing party for one
        vehicle. If the result is available immediately, the result is returned. If the result isn't
        available, a location to the resource readout is returned. This location shall be polled
        until the result is available.
        INFO: GET Requests are not yet supported!
      operationId: getResourceReadoutsUsingPOST
      produces:
        - 'application/x.exve.org.resourceReadout.v1+json;charset=utf-8'
        - 'application/json;charset=utf-8'
      parameters:
        - name: vehicleId
          in: path
          description: vehicleId of the resources to be viewed
          required: true
          type: string
          x-example: WDD111111PKW01000
      responses:
        '201':
          description: Returns a resource to the accessing party
          schema:
            $ref: '#/definitions/ResourceDataContainer'
        '202':
          description: The request has been accepted for processing, but not completed.
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '402':
          description: Payment required
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Resource Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Quota limit is exceeded.
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '505':
          description: Version not supported
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/vehicles/{vehicleId}/ecuReadouts':
    post:
      tags:
        - Electronical Control Units (ECU's)
      summary: View the List of ECU for specific vehicleId.
      description: >-
        This API creates a readout of ECUs for one vehicle. If the result is available
        immediately, the result is returned. If the result isn't available, a location to the ECU
        readout is returned. This location shall be polled until the result is available.
        INFO: GET Requests are not yet supported!
      operationId: getEcuDataListByVehicleIdUsingPOST
      produces:
        - 'application/x.exve.org.ecureadout.v1+json;charset=utf-8'
        - 'application/json;charset=utf-8'
      parameters:
        - name: vehicleId
          in: path
          description: The vehicle identifier of the vehicle to read from
          required: true
          type: string
          x-example: WDD111111PKW01000
        - name: ecuId
          in: query
          description: >-
            Return this ECU id only.
            Default: Return all ECUs.
          required: false
          type: string
      responses:
        '201':
          description: Returns an ECU List
          schema:
            $ref: '#/definitions/EcuDataContainer'
        '202':
          description: The request has been accepted for processing, but not completed.
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '402':
          description: Payment required
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Resource Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Quota limit is exceeded.
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '505':
          description: Version not supported
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/vehicles/{vehicleId}/dtcReadouts':
    post:
      tags:
        - Diagnostic Trouble Codes (DTC's)
      summary: View the List of DTCs for specific vehicleId.
      description: >-
        This API creates a readout of DTCs for one vehicle. If the result is available
        immediately, the result is returned. If the result isn't available, a location to the DTC
        readout is returned. This location shall be polled until the result is available.
        INFO: GET Requests are not yet supported!
      operationId: getDtcDataListByEcuUsingPOST
      produces:
        - 'application/x.exve.org.dtcreadout.v1+json;charset=utf-8'
        - 'application/json;charset=utf-8'
      parameters:
        - name: vehicleId
          in: path
          description: The vehicle identifier of the vehicle to read from.
          required: true
          type: string
          x-example: WDD111111PKW01000
        - name: ecuId
          in: query
          description: >-
            Return DTCs from this ECU id only.
            Default: Return DTCs from all ECUs.
          required: false
          type: string
        - name: dtcStatus
          in: query
          description: >-
            Returns DTCs with this statuses only.
            Default: Return DTCs with all statuses.
          required: false
          type: string
      responses:
        '201':
          description: Returns a DTC List
          schema:
            $ref: '#/definitions/DtcDataContainer'
        '202':
          description: The request has been accepted for processing, but not completed.
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '402':
          description: Payment required
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Resource Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Quota limit is exceeded.
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '505':
          description: Version not supported
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/vehicles/{vehicleId}/ecuId/{ecuId}/dtcId/{dtcId}/dtcSnapshotReadouts':
    post:
      tags:
        - Diagnostic Trouble Code (DTC) Snapshots
      summary: View the List of DTC Snapshot for specific vehicleId.
      description: >-
        This API creates a readout of a DTC snapshot from one vehicle. If the result is
        available immediately, the result is returned. If the result isn't available, a location to
        the DTC snapshot readout is returned. This location shall be polled until the result is
        available.
        INFO: GET Requests are not yet supported!
      operationId: getDtcSnapshotReadoutsUsingPOST
      produces:
        - 'application/x.exve.org.dtcSnapshotReadout.v1+json;charset=utf-8'
        - 'application/json;charset=utf-8'
      parameters:
        - name: vehicleId
          in: path
          description: The vehicle identifier of the vehicle to read from
          required: true
          type: string
          x-example: WDD111111PKW01000
        - name: ecuId
          in: path
          description: The id of the ECU to read from
          required: true
          type: string
          x-example: DTR212
        - name: dtcId
          in: path
          description: The id of the DTC associated with the snapshot
          required: true
          type: string
          x-example: C163AFA
      responses:
        '201':
          description: Returns a DTC Snapshot List
          schema:
            $ref: '#/definitions/DtcSnapshotDataContainer'
        '202':
          description: The request has been accepted for processing, but not completed.
        '204':
          description: The request has been accepted for processing, but no content is available.
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        '402':
          description: Payment required
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Resource Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: Not Acceptable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '429':
          description: Quota limit is exceeded.
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/ErrorResponse'
        '501':
          description: Not Implemented
          schema:
            $ref: '#/definitions/ErrorResponse'
        '503':
          description: Service Unavailable
          schema:
            $ref: '#/definitions/ErrorResponse'
        '505':
          description: Version not supported
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  ErrorResponse:
    type: object
    properties:
      errorCode:
        type: string
        description: Error Code
      errorMessage:
        type: string
        description: Error Message
  CommonType:
    type: object
    required:
      - id
      - messageTimestamp
      - asyncStatus
      - vehicleId
    properties:
      asyncEstimatedComplete:
        type: string
        format: date-time
        description: Not Implemented. Estimated completion time of the readout
      asyncProgress:
        type: integer
        format: int32
        description: Not Implemented. Progress of the readout in percent.
      asyncStatus:
        type: string
        enum:
          - Pending
          - InProgress
          - Complete
          - Fail
        description: Reflects the status of the readouts
      asyncWait:
        type: integer
        format: int64
        description: Not Implemented. Recommended waiting time in milliseconds until next request for status.
      exveErrorId:
        type: string
        description: The id of the error in case something failed
      exveErrorMsg:
        type: string
        description: The error message in case something failed
      exveErrorRef:
        type: string
        description: >-
          A unique reference to the error. Can be used in communication with the
          offering party to help in resolving problems.
      exveNote:
        type: string
        description: >-
          A message regarding the result of the request. Can be filled both when
          the request was completed and failed.
      id:
        type: string
        description: Id unique for this readout.
      messageTimestamp:
        type: string
        format: date-time
        description: Timestamp when this message was created.
      receivedTimestamp:
        type: string
        format: date-time
        description: >-
          Timestamp when the data in the message was received by the ExVe
          backend from the vehicle.
      vehicleId:
        type: string
        description: The vehicle identifier of the extended vehicle, e.g VIN
  ResourceDataContainer:
    type: object
    properties:
      resourceReadout:
        $ref: "#/definitions/ResourceDataType"
  ResourceDataType:
    allOf:
    - $ref: "#/definitions/CommonType"
    - type: object
      properties:
        resources:
          type: array
          description: List of resources.
          items:
            $ref: '#/definitions/ResourceDataItem'
  ResourceDataItem:
    type: object
    required:
      - api
      - name
      - version
    properties:
      api:
        type: string
        description: URI to API exposing resource
      name:
        type: string
        description: Name of resource
      version:
        type: string
        description: Version of resource in API
  EcuDataContainer:
    type: object
    properties:
      ecuReadout:
        $ref: "#/definitions/EcuDataType"
  EcuDataType:
    allOf:
    - $ref: "#/definitions/CommonType"
    - type: object
      properties:
        ecus:
          type: array
          description: List of ECUs
          items:
            $ref: '#/definitions/EcuDataItem'
  EcuDataItem:
    type: object
    required:
      - ecuId
      - hardwareIds
      - softwareIds
    properties:
      ecuId:
        type: string
        description: Identifier of the ECU
      hardwareIds:
        type: array
        description: Identifier(s) of the hardware unit(s) in this ECU
        items:
          type: string
      softwareIds:
        type: array
        description: Identifier(s) of the software unit(s) in this ECU
        items:
          type: string
  DtcDataContainer:
    type: object
    properties:
      dtcReadout:
        $ref: "#/definitions/DtcDataType"
  DtcDataType:
    allOf:
    - $ref: "#/definitions/CommonType"
    - type: object
      properties:
        dtcs:
          type: array
          description: List of DTCs
          items:
            $ref: '#/definitions/DtcDataItem'
  DtcDataItem:
    type: object
    required:
      - dtcId
      - ecuId
      - status
    properties:
      dtcId:
        type: string
        description: Identifier of the DTC.
      dtcTimestamp:
        type: string
        description: Date and time when the DTC occurred
      ecuId:
        type: string
        description: Identifier of the ECU where the DTC occurred
      occurrenceCounter:
        type: integer
        format: int32
        description: Counter of how many times this DTC has occurred
      status:
        type: string
        description: Reflects the status of the DTC
        enum:
          - ACTIVE
          - PENDING
          - PREVIOUSLY_ACTIVE
  DtcSnapshotDataContainer:
    type: object
    properties:
      dtcSnapshotReadout:
        $ref: "#/definitions/DtcSnapshotDataType"
  DtcSnapshotDataType:
    allOf:
    - $ref: "#/definitions/CommonType"
    - type: object
      required:
        - dtcId
        - ecuId
      properties:
        dtcId:
          type: string
          description: Identifier of the DTC
        dtcSnapshotParameters:
          type: array
          description: List of dtcSnapshotParameters.
          items:
            $ref: '#/definitions/DtcSnapshotDataItem'
        ecuId:
          type: string
          description: Identifier of the ECU
  DtcSnapshotDataItem:
    type: object
    required:
      - id
      - value
    properties:
      id:
        type: string
        description: Name of snapshot parameter
      value:
        type: string
        description: Value of snapshot parameter
